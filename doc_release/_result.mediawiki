= E-ICGD : Environnement d’Intégration Continue de Génération de la Documentation - Documentation de Maintenance =

L'équipe responsable du projet &lt;pierre.jeanjean@etu.univ-tlse2.fr&gt;<br />
 version 2.0, 2015-03-13

[[Image:images/logo-DPT-Info.png|frame|none|alt=logo DPT Info]]

== Introduction ==

[http://www.eclipse.org/papyrus/ Papyrus] est un plugin [http://www.eclipse.org eclipse] permettant la génération et l’édition de tous types de modèles EMF, et supportant en particulier le langage de modélisation UML et ses dérivés, tels que SysML et MARTE. Actuellement l’équipe chargée de la réalisation de la documentation du plugin la rédige suivant le modèle utilisé par [https://www.mediawiki.org MediaWiki], et la teste manuellement. Or cette syntaxe n’est pas une des plus pratiques à utiliser : par exemple, elle n’offre pas la possibilité d’utiliser des variables, ne permet pas de coloration syntaxique automatique, et la génération de certains éléments est particulièrement complexe à réaliser. De plus, l’absence de tests automatiques rend difficile la détection de liens morts ainsi que l’absence de fichiers, sources ou images, dont l’importation est nécessaire pour l’affichage correct de la documentation.

== Diagramme de Séquence Système ==

[[Image:images/DSS.png|frame|none|alt=DSS]]

Suite à un commit des sources d’une documentation, le service d’intégration continue Travis-CI s’exécute et prépare une machine virtuelle, qui exécutera le script contenu dans le fichier .travis.yml.<br />
 La machine virtuelle va alors effectuer les opérations suivantes :

* Génération de diagrammes à partir de fichiers .plantuml (si il y en a)
* Génération de la documentation au format HTML
* Génération de la documentation au format MediaWiki
* Validation des documentations générées
* Retour de la validation et des documentations générées

Dans cette documentation, nous séparerons la maintenance de chacune de ces étapes.

== Génération de diagrammes PlantUML ==

Cette opération est effectuée par le script travisScripts/plantUML.sh.<br />
 La variable &quot;count&quot; va contenir le nombre de fichiers correspondant à l’extension recherchée (&quot;plantumlExtension&quot;, par défaut &quot;.plantuml&quot;) présents dans le répertoire contenant les sources des diagrammes (&quot;plantumlSources&quot;, ici le répertoire contenant les sources de la documentation). Si il y a effectivement des fichiers à générer (&quot;count&quot; supérieur à 0), la fonction &quot;plantumlCommand&quot; est exécutée. Sinon, un message indique simplement qu’aucun fichier n’a été trouvé.<br />
 Les paramètres suivants sont configurables dans le fichier travisConfig/config.sh :

* plantumlDir : répertoire dans lequel est situé plantUML (chemin complet contenant l’éxécutable)
* plantumlExtension : extension des fichiers sources des diagrammes à générer
* plantumlSources : répertoire contenant les fichiers sources des diagrammes
* plantumlOutput : répertoire dans lequel doivent être placés les diagrammes générés
* plantumlCommand : commande qui effectue la génération des diagrammes, à partir des 4 paramètres précédents

Document réalisé par [mailto:pierre.jeanjean@etu.univ-tlse2.fr l’équipe en charge du projet EICGD] via [http://asciidoctor.org/ Asciidoctor] (version <tt>1.5.2</tt>) de 'Dan Allen', lui même basé sur [http://www.methods.co.nz/asciidoc AsciiDoc]. Pour l’instant ce document est libre d’utilisation et géré par la 'Licence Creative Commons'. [http://creativecommons.org/licenses/by-sa/3.0/ [[Image:images/icons/88x31.png|Licence Creative Commons]]] [http://creativecommons.org/licenses/by-sa/3.0/ licence Creative Commons Paternité - Partage à l'Identique 3.0 non transposé].

Version 2.0<br />
 Last updated 2015-03-13 22:41:50 UTC

